name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]

permissions:
  packages: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  determine-image-tag:
    name: Determine Image Tag
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get-tag.outputs.tag }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # need the full history to get the tag

      - name: Determine tag
        id: get-tag
        run: |
          TAG_NAME=$(git describe --tags --abbrev=0 2> /dev/null)
          if [ $? -ne 0 ]; then
            echo "No tag in branch history, getting latest tag from main"
            TAG_NAME=$(git describe --tags --abbrev=0 origin/main 2> /dev/null)
          fi
          if [ $? -ne 0 ]; then
            echo "No tags found, defaulting to `latest`"
            TAG_NAME="latest"
          fi
          echo "Detected tag: $TAG_NAME"
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT

  compile-apps:
    name: Compile All Apps
    runs-on: ubuntu-latest
    needs: determine-image-tag
    container:
      image: ghcr.io/esl-epfl/x-heep/x-heep-toolchain:${{ needs.determine-image-tag.outputs.tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Compile all apps with GCC and Clang
        shell: bash -l {0}
        run: |
          make mcu-gen X_HEEP_CFG=configs/ci.hjson && \
          python3 test/test_apps/test_apps.py --compilers gcc,clang --compiler-paths /tools/riscv --compiler-prefixes riscv32-unknown- --compile-only

  simulate-apps:
    name: Simulate All Apps
    runs-on: ubuntu-latest
    needs: determine-image-tag
    container:
      image: ghcr.io/esl-epfl/x-heep/x-heep-toolchain:${{ needs.determine-image-tag.outputs.tag }}
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Compile and simulate all apps
        shell: bash -l {0}
        run: |
          make mcu-gen X_HEEP_CFG=configs/ci.hjson && \
          python3 test/test_apps/test_apps.py --compilers gcc,clang --compiler-paths /tools/riscv --compiler-prefixes riscv32-unknown-

  lint:
    name: Lint Generated Files
    runs-on: ubuntu-latest
    needs: determine-image-tag
    container:
      image: ghcr.io/esl-epfl/x-heep/x-heep-toolchain:${{ needs.determine-image-tag.outputs.tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Mark Repository as Safe
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
      - name: Check generated file consistency
        shell: bash -l {0}
        run: |
          make mcu-gen && \
          util/git-diff.py --error-msg '::error ::Found differences in generated SystemVerilog files.'

  gen-peripherals:
    name: Test Peripherals Generation
    runs-on: ubuntu-latest
    needs: determine-image-tag
    container:
      image: ghcr.io/esl-epfl/x-heep/x-heep-toolchain:${{ needs.determine-image-tag.outputs.tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Configure the job container and simulate all apps
        shell: bash -l {0}
        run: |
          make clean-all
          # Run the test script
          python3 test/test_x_heep_gen/test_peripherals.py

  check-vendor:
    name: Vendor up-to-date
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install requirements
        run: pip install -r util/python-requirements.txt
      - name: Re-vendor and diff
        run: |
          find . -name '*.vendor.hjson' | xargs -n1 util/vendor.py --verbose &&
          util/git-diff.py --error-msg '::error ::Found differences, please re-vendor.'

  black-formatter:
    name: Check Python code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: >
            util/x_heep_gen
            util/mcu_gen.py
            util/structs_periph_gen.py
            util/waiver-gen.py
            util/c_gen.py
            test/test_x_heep_gen/test_peripherals.py
          version: "~= 24.8.0"

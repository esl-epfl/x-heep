// Copyright 2022 OpenHW Group
// Solderpad Hardware License, Version 2.1, see LICENSE.md for details.
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1



#ifndef COREV_MINI_MCU_H_
#define COREV_MINI_MCU_H_

#ifdef __cplusplus
extern "C" {
#endif  // __cplusplus

#define MEMORY_BANKS 6

#define RAM0_START_ADDRESS 0x00000000
#define RAM0_END_ADDRESS 0x00008000
#define RAM1_START_ADDRESS 0x00008000
#define RAM1_END_ADDRESS 0x00010000
#define RAM2_START_ADDRESS 0x00010000
#define RAM2_END_ADDRESS 0x00018000
#define RAM3_START_ADDRESS 0x00018000
#define RAM3_END_ADDRESS 0x00020000
#define RAM4_START_ADDRESS 0x00020000
#define RAM4_END_ADDRESS 0x00028000
#define RAM5_START_ADDRESS 0x00028000
#define RAM5_END_ADDRESS 0x00030000


#define EXTERNAL_DOMAINS 0

#define DEBUG_START_ADDRESS 0x10000000
#define DEBUG_SIZE 0x00100000
#define DEBUG_END_ADDRESS (DEBUG_START_ADDRESS + DEBUG_SIZE)

// base peripherals
#define AO_PERIPHERAL_START_ADDRESS 0x20000000
#define AO_PERIPHERAL_SIZE 0x100000
#define AO_PERIPHERAL_END_ADDRESS (AO_PERIPHERAL_START_ADDRESS + AO_PERIPHERAL_SIZE)

#define SOC_CTRL_START_ADDRESS (AO_PERIPHERAL_START_ADDRESS + 0x0)
#define SOC_CTRL_SIZE 0x10000
#define SOC_CTRL_END_ADDRESS (SOC_CTRL_START_ADDRESS + SOC_CTRL_SIZE)
#define SOC_CTRL_IDX 0

#define BOOTROM_START_ADDRESS (AO_PERIPHERAL_START_ADDRESS + 0x10000)
#define BOOTROM_SIZE 0x10000
#define BOOTROM_END_ADDRESS (BOOTROM_START_ADDRESS + BOOTROM_SIZE)
#define BOOTROM_IDX 1

#define SPI_FLASH_START_ADDRESS (AO_PERIPHERAL_START_ADDRESS + 0x20000)
#define SPI_FLASH_SIZE 0x8000
#define SPI_FLASH_END_ADDRESS (SPI_FLASH_START_ADDRESS + SPI_FLASH_SIZE)
#define SPI_FLASH_IDX 2

#define SPI_MEMIO_START_ADDRESS (AO_PERIPHERAL_START_ADDRESS + 0x28000)
#define SPI_MEMIO_SIZE 0x8000
#define SPI_MEMIO_END_ADDRESS (SPI_MEMIO_START_ADDRESS + SPI_MEMIO_SIZE)
#define SPI_MEMIO_IDX 3

#define DMA_START_ADDRESS (AO_PERIPHERAL_START_ADDRESS + 0x30000)
#define DMA_SIZE 0x10000
#define DMA_END_ADDRESS (DMA_START_ADDRESS + DMA_SIZE)
#define DMA_IDX 4

#define POWER_MANAGER_START_ADDRESS (AO_PERIPHERAL_START_ADDRESS + 0x40000)
#define POWER_MANAGER_SIZE 0x10000
#define POWER_MANAGER_END_ADDRESS (POWER_MANAGER_START_ADDRESS + POWER_MANAGER_SIZE)
#define POWER_MANAGER_IDX 5

#define RV_TIMER_AO_START_ADDRESS (AO_PERIPHERAL_START_ADDRESS + 0x50000)
#define RV_TIMER_AO_SIZE 0x10000
#define RV_TIMER_AO_END_ADDRESS (RV_TIMER_AO_START_ADDRESS + RV_TIMER_AO_SIZE)
#define RV_TIMER_AO_IDX 6

#define FAST_INTR_CTRL_START_ADDRESS (AO_PERIPHERAL_START_ADDRESS + 0x60000)
#define FAST_INTR_CTRL_SIZE 0x10000
#define FAST_INTR_CTRL_END_ADDRESS (FAST_INTR_CTRL_START_ADDRESS + FAST_INTR_CTRL_SIZE)
#define FAST_INTR_CTRL_IDX 7

#define EXT_PERIPHERAL_START_ADDRESS (AO_PERIPHERAL_START_ADDRESS + 0x70000)
#define EXT_PERIPHERAL_SIZE 0x10000
#define EXT_PERIPHERAL_END_ADDRESS (EXT_PERIPHERAL_START_ADDRESS + EXT_PERIPHERAL_SIZE)
#define EXT_PERIPHERAL_IDX 8

#define PAD_CONTROL_START_ADDRESS (AO_PERIPHERAL_START_ADDRESS + 0x80000)
#define PAD_CONTROL_SIZE 0x10000
#define PAD_CONTROL_END_ADDRESS (PAD_CONTROL_START_ADDRESS + PAD_CONTROL_SIZE)
#define PAD_CONTROL_IDX 9

#define GPIO_AO_START_ADDRESS (AO_PERIPHERAL_START_ADDRESS + 0x90000)
#define GPIO_AO_SIZE 0x10000
#define GPIO_AO_END_ADDRESS (GPIO_AO_START_ADDRESS + GPIO_AO_SIZE)
#define GPIO_AO_IDX 10

#define UART_START_ADDRESS (AO_PERIPHERAL_START_ADDRESS + 0xa0000)
#define UART_SIZE 0x10000
#define UART_END_ADDRESS (UART_START_ADDRESS + UART_SIZE)
#define UART_IDX 11


#define DMA_CH_NUM 4
#define DMA_CH_SIZE 0x100
#define DMA_NUM_MASTER_PORTS 2
#define DMA_ADDR_MODE 1
#define DMA_SUBADDR_MODE 1
#define DMA_HW_FIFO_MODE 1
#define DMA_ZERO_PADDING 1

// user peripherals
#define PERIPHERAL_START_ADDRESS 0x30000000
#define PERIPHERAL_SIZE 0x100000
#define PERIPHERAL_END_ADDRESS (PERIPHERAL_START_ADDRESS + PERIPHERAL_SIZE)

#define RV_PLIC_START_ADDRESS (PERIPHERAL_START_ADDRESS + 0x0)
#define RV_PLIC_SIZE 0x10000
#define RV_PLIC_END_ADDRESS (RV_PLIC_START_ADDRESS + RV_PLIC_SIZE)
#define RV_PLIC_IDX 12
#define RV_PLIC_IS_INCLUDED
#define SPI_HOST_START_ADDRESS (PERIPHERAL_START_ADDRESS + 0x10000)
#define SPI_HOST_SIZE 0x10000
#define SPI_HOST_END_ADDRESS (SPI_HOST_START_ADDRESS + SPI_HOST_SIZE)
#define SPI_HOST_IDX 13
#define SPI_HOST_IS_INCLUDED
#define GPIO_START_ADDRESS (PERIPHERAL_START_ADDRESS + 0x20000)
#define GPIO_SIZE 0x10000
#define GPIO_END_ADDRESS (GPIO_START_ADDRESS + GPIO_SIZE)
#define GPIO_IDX 14
#define GPIO_IS_INCLUDED
#define I2C_START_ADDRESS (PERIPHERAL_START_ADDRESS + 0x30000)
#define I2C_SIZE 0x10000
#define I2C_END_ADDRESS (I2C_START_ADDRESS + I2C_SIZE)
#define I2C_IDX 15
#define I2C_IS_INCLUDED
#define RV_TIMER_START_ADDRESS (PERIPHERAL_START_ADDRESS + 0x40000)
#define RV_TIMER_SIZE 0x10000
#define RV_TIMER_END_ADDRESS (RV_TIMER_START_ADDRESS + RV_TIMER_SIZE)
#define RV_TIMER_IDX 16
#define RV_TIMER_IS_INCLUDED
#define SPI2_START_ADDRESS (PERIPHERAL_START_ADDRESS + 0x50000)
#define SPI2_SIZE 0x10000
#define SPI2_END_ADDRESS (SPI2_START_ADDRESS + SPI2_SIZE)
#define SPI2_IDX 17
#define SPI2_IS_INCLUDED
#define I2S_START_ADDRESS (PERIPHERAL_START_ADDRESS + 0x70000)
#define I2S_SIZE 0x10000
#define I2S_END_ADDRESS (I2S_START_ADDRESS + I2S_SIZE)
#define I2S_IDX 18
#define I2S_IS_INCLUDED

// This section is here to have default values for the peripherals that are not included in the user peripheral domain. Their are used in their respective structs.h files.
// Some other files, like applications main c file, use also some peripheral attributes but the file is not generated if the peripheral is not included in the user peripheral domain.
#define PDM2PCM_START_ADDRESS 0
// End of the section

#define EXT_SLAVE_START_ADDRESS 0xF0000000
#define EXT_SLAVE_SIZE 0x01000000
#define EXT_SLAVE_END_ADDRESS (EXT_SLAVE_START_ADDRESS + EXT_SLAVE_SIZE)

#define FLASH_MEM_START_ADDRESS 0x40000000
#define FLASH_MEM_SIZE 0x01000000
#define FLASH_MEM_END_ADDRESS (FLASH_MEM_START_ADDRESS + FLASH_MEM_SIZE)

#define QTY_INTR 64
#define NULL_INTR 0
#define UART_INTR_TX_WATERMARK 1
#define UART_INTR_RX_WATERMARK 2
#define UART_INTR_TX_EMPTY 3
#define UART_INTR_RX_OVERFLOW 4
#define UART_INTR_RX_FRAME_ERR 5
#define UART_INTR_RX_BREAK_ERR 6
#define UART_INTR_RX_TIMEOUT 7
#define UART_INTR_RX_PARITY_ERR 8
#define GPIO_INTR_8 9
#define GPIO_INTR_9 10
#define GPIO_INTR_10 11
#define GPIO_INTR_11 12
#define GPIO_INTR_12 13
#define GPIO_INTR_13 14
#define GPIO_INTR_14 15
#define GPIO_INTR_15 16
#define GPIO_INTR_16 17
#define GPIO_INTR_17 18
#define GPIO_INTR_18 19
#define GPIO_INTR_19 20
#define GPIO_INTR_20 21
#define GPIO_INTR_21 22
#define GPIO_INTR_22 23
#define GPIO_INTR_23 24
#define GPIO_INTR_24 25
#define GPIO_INTR_25 26
#define GPIO_INTR_26 27
#define GPIO_INTR_27 28
#define GPIO_INTR_28 29
#define GPIO_INTR_29 30
#define GPIO_INTR_30 31
#define GPIO_INTR_31 32
#define INTR_FMT_WATERMARK 33
#define INTR_RX_WATERMARK 34
#define INTR_FMT_OVERFLOW 35
#define INTR_RX_OVERFLOW 36
#define INTR_NAK 37
#define INTR_SCL_INTERFERENCE 38
#define INTR_SDA_INTERFERENCE 39
#define INTR_STRETCH_TIMEOUT 40
#define INTR_SDA_UNSTABLE 41
#define INTR_TRANS_COMPLETE 42
#define INTR_TX_EMPTY 43
#define INTR_TX_NONEMPTY 44
#define INTR_TX_OVERFLOW 45
#define INTR_ACQ_OVERFLOW 46
#define INTR_ACK_STOP 47
#define INTR_HOST_TIMEOUT 48
#define SPI2_INTR_EVENT 49
#define I2S_INTR_EVENT 50
#define EXT_INTR_0 51
#define EXT_INTR_1 52
#define EXT_INTR_2 53
#define EXT_INTR_3 54
#define EXT_INTR_4 55
#define EXT_INTR_5 56
#define EXT_INTR_6 57
#define EXT_INTR_7 58
#define EXT_INTR_8 59
#define EXT_INTR_9 60
#define EXT_INTR_10 61
#define EXT_INTR_11 62
#define EXT_INTR_12 63


#define GPIO_AO_DOMAIN_LIMIT 8


#ifdef __cplusplus
}  // extern "C"
#endif  // __cplusplus

#endif  // COREV_MINI_MCU_H_
